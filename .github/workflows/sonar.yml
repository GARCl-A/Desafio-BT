name: SonarQube Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Install SonarQube Scanner
      run: dotnet tool install -g dotnet-sonarscanner
    
    - name: Begin SonarQube Analysis
      run: |
        dotnet sonarscanner begin \
          /k:"GARCl-A_Desafio-BT" \
          /o:"garcl-a" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.token="$SONAR_TOKEN" \
          /d:sonar.cs.opencover.reportsPaths="coverage/**/coverage.opencover.xml"
    
    - name: Build and Test
      run: |
        dotnet restore
        dotnet build --no-restore
        dotnet test --collect:"XPlat Code Coverage" --results-directory ./coverage -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    
    - name: End SonarQube Analysis
      if: always()
      run: dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"